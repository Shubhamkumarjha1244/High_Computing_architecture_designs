`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: shubham kumar jha
// 
// Create Date: 09.01.2025 12:00:49
// Design Name: 
// Module Name: Eight_bit_carry_select_adder
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Eight_bit_carry_select_adder(inn1,inn2,select,sum,carry_out,overflow_flag);
    input[7:0] inn1,inn2; //2 8-bit input
    wire [7:0] xor_inn2;
    input select;      //input carry
    output[7:0] sum;    //final sum
    output carry_out;  //final carry
    output overflow_flag; //for overflow condition during operation
    wire[6:0] internal_carry; //for carry generated by internal 1bit adder
    
    assign xor_inn2[0]=inn2[0]^select;
    assign xor_inn2[1]=inn2[1]^select;
    assign xor_inn2[2]=inn2[2]^select;
    assign xor_inn2[3]=inn2[3]^select;
    assign xor_inn2[4]=inn2[4]^select;
    assign xor_inn2[5]=inn2[5]^select;
    assign xor_inn2[6]=inn2[6]^select;
    assign xor_inn2[7]=inn2[7]^select;
    
    //imported 8 instances of 1 bit carry select adder
    
    one_bit_carry_select_adder bit_0(inn1[0],xor_inn2[0],select,sum[0],internal_carry[0]);
    one_bit_carry_select_adder bit_1(inn1[1],xor_inn2[1],internal_carry[0],sum[1],internal_carry[1]);
    one_bit_carry_select_adder bit_2(inn1[2],xor_inn2[2],internal_carry[1],sum[2],internal_carry[2]);
    one_bit_carry_select_adder bit_3(inn1[3],xor_inn2[3],internal_carry[2],sum[3],internal_carry[3]);
    one_bit_carry_select_adder bit_4(inn1[4],xor_inn2[4],internal_carry[3],sum[4],internal_carry[4]);
    one_bit_carry_select_adder bit_5(inn1[5],xor_inn2[5],internal_carry[4],sum[5],internal_carry[5]);
    one_bit_carry_select_adder bit_6(inn1[6],xor_inn2[6],internal_carry[5],sum[6],internal_carry[6]);
    one_bit_carry_select_adder bit_7(inn1[7],xor_inn2[7],internal_carry[6],sum[7],carry_out);
    assign overflow_flag=internal_carry[6]^carry_out;
    
endmodule
